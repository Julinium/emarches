# Generated by Django 5.2.4 on 2025-10-14 20:35

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0006_alter_agrement_options_alter_category_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True, null=True)),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='Name')),
                ('description', models.CharField(blank=True, max_length=64, null=True, verbose_name='Description')),
                ('channel', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone'), ('sms', 'SMS'), ('whatsapp', 'Whatsapp')], default='email', max_length=10, verbose_name='Channel')),
                ('monthly', models.SmallIntegerField(blank=True, default=4, null=True, verbose_name='Messages per month')),
            ],
            options={
                'db_table': 'nas_newsletter',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True, null=True)),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='Name')),
                ('event', models.CharField(blank=True, max_length=256, null=True, verbose_name='Event')),
                ('description', models.CharField(blank=True, max_length=64, null=True, verbose_name='Description')),
                ('channel', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone'), ('sms', 'SMS'), ('whatsapp', 'Whatsapp')], default='email', max_length=10, verbose_name='Channel')),
            ],
            options={
                'db_table': 'nas_notification',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('when', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date')),
                ('title', models.CharField(blank=True, editable=False, max_length=256, null=True, verbose_name='Title')),
                ('content', models.TextField(blank=True, editable=False, null=True, verbose_name='Content')),
                ('tender', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='base.tender', verbose_name='Tender')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'db_table': 'nas_comment',
                'ordering': ['-when'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True, editable=False, null=True)),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Name')),
                ('forme', models.CharField(blank=True, default='SARL', max_length=255, verbose_name='Juridic form')),
                ('ice', models.CharField(blank=True, default='77777777777777', max_length=64, verbose_name='ICE')),
                ('tp', models.CharField(blank=True, default='7777777', max_length=64, verbose_name='Tax Pro')),
                ('rc', models.CharField(blank=True, default='7777777', max_length=64, verbose_name='Num. RC')),
                ('cnss', models.CharField(blank=True, default='7777777', max_length=64, verbose_name='CNSS')),
                ('date_est', models.DateField(blank=True, null=True, verbose_name='Date Established')),
                ('address', models.CharField(blank=True, max_length=512, verbose_name='Street Address')),
                ('city', models.CharField(blank=True, max_length=64, verbose_name='City')),
                ('zip_code', models.CharField(blank=True, max_length=8, verbose_name='ZIP Code')),
                ('state', models.CharField(blank=True, max_length=64, verbose_name='Region, State')),
                ('country', models.CharField(blank=True, default='Morocco', max_length=64, verbose_name='Country')),
                ('phone', models.CharField(blank=True, max_length=255, verbose_name='Phone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('whatsapp', models.CharField(blank=True, max_length=255, verbose_name='Whatsapp')),
                ('faximili', models.CharField(blank=True, max_length=255, verbose_name='Fax')),
                ('website', models.CharField(blank=True, max_length=128, verbose_name='Website')),
                ('activity', models.CharField(blank=True, max_length=128, verbose_name='Activity')),
                ('sector', models.CharField(blank=True, max_length=128, verbose_name='Sector')),
                ('note', models.CharField(blank=True, max_length=1024, verbose_name='Descritpion')),
                ('image', models.ImageField(blank=True, null=True, upload_to='companies/', verbose_name='Image')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('agrements', models.ManyToManyField(related_name='companies', to='base.agrement', verbose_name='Agrements')),
                ('qualifs', models.ManyToManyField(related_name='companies', to='base.qualif', verbose_name='Qualifications')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='companies', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'nas_company',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Download',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('when', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Started')),
                ('size_read', models.CharField(blank=True, editable=False, max_length=128, null=True, verbose_name='Displayed Size')),
                ('size_bytes', models.BigIntegerField(blank=True, editable=False, null=True, verbose_name='Size in Bytes')),
                ('tender', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to='base.tender', verbose_name='Tender')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'nas_tender_download',
                'ordering': ['-when'],
            },
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='Name')),
                ('image', models.ImageField(blank=True, null=True, upload_to='folders/', verbose_name='Image')),
                ('color', models.CharField(blank=True, default='#fd7e14', max_length=8, null=True, verbose_name='Color')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='folders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'nas_folder',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True, editable=False, null=True)),
                ('when', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Added')),
                ('tags', models.CharField(blank=True, max_length=128, null=True, verbose_name='Tags')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='nas.company', verbose_name='Company')),
                ('tender', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='base.tender', verbose_name='Tender')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL)),
                ('folders', models.ManyToManyField(related_name='favorites', to='nas.folder', verbose_name='Folders')),
            ],
            options={
                'db_table': 'nas_favorite',
                'ordering': ['-when'],
            },
        ),
        migrations.CreateModel(
            name='Letter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('when', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date sent')),
                ('ua', models.CharField(blank=True, editable=False, max_length=512, null=True, verbose_name='User Agent')),
                ('ip', models.CharField(blank=True, editable=False, max_length=64, null=True, verbose_name='IP Address')),
                ('email', models.EmailField(blank=True, editable=False, max_length=254, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, editable=False, max_length=64, null=True, verbose_name='Phone')),
                ('title', models.CharField(blank=True, editable=False, max_length=256, null=True, verbose_name='Object')),
                ('message', models.TextField(blank=True, editable=False, null=True, verbose_name='Your Message')),
                ('method', models.CharField(blank=True, editable=False, max_length=8, null=True, verbose_name='Contact Method')),
                ('response', models.TextField(blank=True, editable=False, null=True, verbose_name='Response')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('actions', models.TextField(blank=True, null=True, verbose_name='Actions')),
                ('solved', models.BooleanField(blank=True, default=False, null=True, verbose_name='Solved')),
                ('user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='letters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'nas_letter',
                'ordering': ['solved', '-when'],
            },
        ),
        migrations.CreateModel(
            name='LetterSent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('when', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date sent')),
                ('sender', models.CharField(blank=True, editable=False, max_length=256, null=True, verbose_name='Sender')),
                ('destination', models.CharField(blank=True, editable=False, max_length=256, null=True, verbose_name='Destination')),
                ('title', models.CharField(blank=True, editable=False, max_length=256, null=True, verbose_name='Object')),
                ('message', models.TextField(blank=True, editable=False, null=True, verbose_name='Message')),
                ('retries', models.SmallIntegerField(default=0, verbose_name='Retries')),
                ('max_retries', models.SmallIntegerField(default=5, verbose_name='Max retries')),
                ('success', models.BooleanField(default=False, null=True, verbose_name='Success')),
                ('user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_letters', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('newsletter', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_letters', to='nas.newsletter', verbose_name='Newsletter')),
            ],
            options={
                'db_table': 'nas_letter_sent',
                'ordering': ['success', '-when'],
            },
        ),
        migrations.CreateModel(
            name='NewsletterSubscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True, null=True)),
                ('when', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Last subscribed')),
                ('newsletter', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='nas.newsletter')),
                ('user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='newsletters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'nas_newsletter_subscription',
                'ordering': ['-when'],
            },
        ),
        migrations.CreateModel(
            name='NotificationSent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('when', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date sent')),
                ('sender', models.CharField(blank=True, editable=False, max_length=256, null=True, verbose_name='Sender')),
                ('destination', models.CharField(blank=True, editable=False, max_length=256, null=True, verbose_name='Destination')),
                ('title', models.CharField(blank=True, editable=False, max_length=256, null=True, verbose_name='Object')),
                ('message', models.TextField(blank=True, editable=False, null=True, verbose_name='Message')),
                ('retries', models.SmallIntegerField(default=0, verbose_name='Retries')),
                ('max_retries', models.SmallIntegerField(default=5, verbose_name='Max retries')),
                ('success', models.BooleanField(default=False, null=True, verbose_name='Success')),
                ('notification', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_notifications', to='nas.notification', verbose_name='Notification')),
                ('user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_notifications', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'db_table': 'nas_notification_sent',
                'ordering': ['success', '-when'],
            },
        ),
        migrations.CreateModel(
            name='NotificationSubscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True, null=True)),
                ('when', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Last subscribed')),
                ('notification', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='nas.notification')),
                ('user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'nas_notification_subscription',
                'ordering': ['-when'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True, editable=False, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Avatar')),
                ('phone', models.CharField(blank=True, default='', max_length=255, verbose_name='Telephone')),
                ('whatsapp', models.CharField(blank=True, default='', max_length=255, verbose_name='Whatsapp')),
                ('about', models.CharField(blank=True, default='', max_length=1024, verbose_name='A Propos')),
                ('onborded', models.BooleanField(default=False, editable=False, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'nas_profile',
            },
        ),
        migrations.CreateModel(
            name='Reaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('when', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date')),
                ('reaction', models.CharField(choices=[('like', 'Like'), ('dislike', 'Dislike')], default='like', max_length=10, verbose_name='Reaction')),
                ('comment', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='nas.comment', verbose_name='Comment')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'db_table': 'nas_reaction',
                'ordering': ['-when'],
            },
        ),
    ]
