# Generated by Django 5.2.7 on 2025-10-07 10:24

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agrement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('short', models.CharField(blank=True, max_length=128, null=True)),
                ('name', models.CharField(blank=True, max_length=2048, null=True)),
            ],
            options={
                'db_table': 'agrement',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('label', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'category',
                'ordering': ['label'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('short', models.CharField(blank=True, max_length=128, null=True)),
                ('name', models.CharField(blank=True, max_length=2048, null=True)),
                ('ministery', models.CharField(blank=True, max_length=16, null=True)),
            ],
            options={
                'db_table': 'client',
                'ordering': ['ministery', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('short', models.CharField(blank=True, max_length=2048, null=True)),
                ('name', models.CharField(blank=True, max_length=2048, null=True)),
            ],
            options={
                'db_table': 'domain',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Kind',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('short', models.CharField(blank=True, max_length=128, null=True)),
                ('name', models.CharField(blank=True, max_length=1024, null=True)),
            ],
            options={
                'db_table': 'kind',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Mode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('short', models.CharField(blank=True, max_length=128, null=True)),
                ('name', models.CharField(blank=True, max_length=2048, null=True)),
            ],
            options={
                'db_table': 'mode',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('short', models.CharField(blank=True, max_length=128, null=True)),
                ('name', models.CharField(blank=True, max_length=2048, null=True)),
            ],
            options={
                'db_table': 'procedure',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Qualif',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('short', models.CharField(blank=True, max_length=128, null=True)),
                ('name', models.CharField(blank=True, max_length=2048, null=True)),
                ('domain', models.CharField(blank=True, max_length=128, null=True)),
                ('classe', models.CharField(blank=True, max_length=16, null=True)),
            ],
            options={
                'db_table': 'qualif',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Lot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number', models.SmallIntegerField(blank=True, null=True)),
                ('title', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('estimate', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('bond', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('reserved', models.BooleanField(blank=True, null=True)),
                ('variant', models.BooleanField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, db_column='category', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='lots', to='base.category')),
            ],
            options={
                'db_table': 'lot',
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('when', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('lot', models.ForeignKey(blank=True, db_column='lot', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to='base.lot')),
            ],
            options={
                'db_table': 'meeting',
                'ordering': ['-when'],
            },
        ),
        migrations.CreateModel(
            name='RelAgrementLot',
            fields=[
                ('pk', models.CompositePrimaryKey('agrement', 'lot', blank=True, editable=False, primary_key=True, serialize=False)),
                ('agrement', models.ForeignKey(db_column='agrement', on_delete=django.db.models.deletion.CASCADE, to='base.agrement')),
                ('lot', models.ForeignKey(db_column='lot', on_delete=django.db.models.deletion.CASCADE, to='base.lot')),
            ],
            options={
                'db_table': 'rel_agrement_lot',
                'unique_together': {('agrement', 'lot')},
            },
        ),
        migrations.AddField(
            model_name='lot',
            name='agrements',
            field=models.ManyToManyField(related_name='lots', through='base.RelAgrementLot', to='base.agrement'),
        ),
        migrations.CreateModel(
            name='RelQualifLot',
            fields=[
                ('pk', models.CompositePrimaryKey('qualif', 'lot', blank=True, editable=False, primary_key=True, serialize=False)),
                ('lot', models.ForeignKey(db_column='lot', on_delete=django.db.models.deletion.CASCADE, to='base.lot')),
                ('qualif', models.ForeignKey(db_column='qualif', on_delete=django.db.models.deletion.CASCADE, to='base.qualif')),
            ],
            options={
                'db_table': 'rel_qualif_lot',
                'unique_together': {('qualif', 'lot')},
            },
        ),
        migrations.AddField(
            model_name='lot',
            name='qualifs',
            field=models.ManyToManyField(related_name='lots', through='base.RelQualifLot', to='base.qualif'),
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('when', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('lot', models.ForeignKey(blank=True, db_column='lot', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='base.lot')),
            ],
            options={
                'db_table': 'sample',
                'ordering': ['-when'],
            },
        ),
        migrations.CreateModel(
            name='Tender',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chrono', models.CharField(blank=True, max_length=16, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('reference', models.CharField(blank=True, max_length=512, null=True)),
                ('published', models.DateField(blank=True, null=True)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('lots_count', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('estimate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=16, null=True)),
                ('bond', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=16, null=True)),
                ('plans_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=16, null=True)),
                ('reserved', models.BooleanField(blank=True, null=True)),
                ('variant', models.BooleanField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=1024, null=True)),
                ('ebid', models.SmallIntegerField(blank=True, db_comment='1: Required, 0: Not required, Else: NA', default=9, null=True)),
                ('esign', models.SmallIntegerField(blank=True, db_comment='1: Required, 0: Not required, Else: NA', default=9, null=True)),
                ('size_read', models.CharField(blank=True, max_length=128, null=True)),
                ('size_bytes', models.BigIntegerField(blank=True, null=True)),
                ('address_withdrawal', models.TextField(blank=True, null=True)),
                ('address_bidding', models.TextField(blank=True, null=True)),
                ('address_opening', models.TextField(blank=True, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=256, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=256, null=True)),
                ('contact_email', models.CharField(blank=True, max_length=256, null=True)),
                ('contact_fax', models.CharField(blank=True, max_length=256, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('cancelled', models.BooleanField(blank=True, default=False, null=True)),
                ('deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('link', models.CharField(blank=True, max_length=256, null=True)),
                ('acronym', models.CharField(blank=True, max_length=8, null=True)),
                ('category', models.ForeignKey(blank=True, db_column='category', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tenders', to='base.category')),
                ('client', models.ForeignKey(blank=True, db_column='client', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tenders', to='base.client')),
                ('kind', models.ForeignKey(blank=True, db_column='kind', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tenders', to='base.kind')),
                ('mode', models.ForeignKey(blank=True, db_column='mode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tenders', to='base.mode')),
                ('procedure', models.ForeignKey(blank=True, db_column='procedure', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tenders', to='base.procedure')),
            ],
            options={
                'db_table': 'tender',
            },
        ),
        migrations.AddField(
            model_name='lot',
            name='tender',
            field=models.ForeignKey(blank=True, db_column='tender', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lots', to='base.tender'),
        ),
        migrations.CreateModel(
            name='FileToGet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('closed', models.BooleanField(blank=True, default=False, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('reason', models.CharField(blank=True, default='Created', max_length=256, null=True)),
                ('tender', models.ForeignKey(blank=True, db_column='tender', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files_to_get', to='base.tender')),
            ],
            options={
                'db_table': 'file_to_get',
                'ordering': ['-closed', 'created'],
            },
        ),
        migrations.CreateModel(
            name='Change',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reported', models.DateTimeField(auto_now_add=True, null=True)),
                ('changes', models.CharField(blank=True, max_length=4096, null=True)),
                ('tender', models.ForeignKey(blank=True, db_column='tender', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='changes', to='base.tender')),
            ],
            options={
                'db_table': 'change',
                'ordering': ['-reported', 'tender'],
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('when', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('lot', models.ForeignKey(blank=True, db_column='lot', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='visits', to='base.lot')),
            ],
            options={
                'db_table': 'visit',
                'ordering': ['-when'],
            },
        ),
    ]
